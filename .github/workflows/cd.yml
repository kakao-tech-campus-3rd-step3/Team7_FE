name: "Continuous Deployment"

on:
    push:
        branches:
            - main
    workflow_dispatch:

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: ap-northeast-2
    AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
    AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
    build:
        name: Build and Deploy
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js (with Yarn cache)
              uses: actions/setup-node@v4
              with:
                  node-version: "22"
                  cache: "yarn"

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

            - name: Cache Dependencies
              uses: actions/cache@v4
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Cache node_modules
              uses: actions/cache@v4
              id: node-modules-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules-

            - name: Install dependencies
              if: steps.node-modules-cache.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile

            # - name: Setup Environment Variables
            #   run: echo "VITE_API_BASE_URL=${{  }}" > .env

            - name: Build application
              run: yarn build

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-artifacts
                  path: ./dist
                  retention-days: 30

    deploy:
        name: Deploy to Production
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: build-artifacts
                  path: ./dist

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Deploy to S3
              run: |
                  aws s3 sync ./dist s3://${{ env.AWS_BUCKET_NAME }} --delete

            - name: Invalidate CloudFront Cache
              run: |
                  aws cloudfront create-invalidation --distribution-id ${{ env.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
